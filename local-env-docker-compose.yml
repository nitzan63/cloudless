services:
  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cloudless-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  data-service:
    image: data-service:latest
    container_name: data-service
    build:
      context: ./data_service
      dockerfile: Dockerfile
    environment:
      - PORT=8002
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydatabase
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
    ports:
      - "8002:8002"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cloudless-net

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    environment:
      - PORT=8003
      - DATA_SERVICE_URL=http://data-service:8002
    ports:
      - "8003:8003"
    depends_on:
      - data-service
    networks:
      - cloudless-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    networks:
      - cloudless-net

  cloudless-main-server:
    image: cloudless-main-server:latest
    container_name: cloudless-main-server
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - PORT=8000
      - DATA_SERVICE_URL=http://data-service:8002
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=pass
    depends_on:
      - data-service
      - rabbitmq
    ports:
      - "8000:8000"
    networks:
      - cloudless-net

  task-executor:
    image: task-executor:latest
    container_name: task-executor
    build:
      context: ./task_executor
      dockerfile: Dockerfile
    environment:
      - DATA_SERVICE_URL=http://data-service:8002
      - LIVY_URL=http://livy:8998
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=pass
      - SHARED_SCRIPTS_PATH=/app/scripts/
    depends_on:
      - data-service
      - livy
      - rabbitmq
    networks:
      - cloudless-net
    volumes:
      - shared-data:/app/scripts

  job-update-service:
    image: job-update-service:latest
    container_name: job-update-service
    build:
      context: ./job_update_service
      dockerfile: Dockerfile
    environment:
      - DATA_SERVICE_URL=http://data-service:8002
      - LIVY_URL=http://livy:8998
      - INTERVAL_SECONDS=30
    depends_on:
      - data-service
      - livy
    networks:
      - cloudless-net

  register-service:
    image: register-service:latest
    container_name: register-service
    build:
      context: ./register_server
      dockerfile: Dockerfile
    environment:
      - DATA_SERVICE_URL=http://data-service:8002
      - PORT=8001
      - WIREGUARD_SERVICE_URL=http://wireguard:5000
      - AUTH_SERVICE_URL=http://auth-service:8003
      - SERVER_NETWORK_IP=10.10.0.0
      - VPN_SERVER_PORT=51820
    depends_on:
      - data-service
      - auth-service
      - wireguard
    ports:
      - "8001:8001"
    networks:
      - cloudless-net

  spark-master:
    image: bitnami/spark:4.0.0
    container_name: spark-master
    network_mode: "service:wireguard"
    environment:
      - SPARK_MODE=master
      - PYSPARK_PYTHON=python
      - SPARK_MASTER_URL=spark://10.10.0.1:7077
    depends_on:
      - wireguard

  # spark-worker:
  #   image: bitnami/spark:latest
  #   container_name: spark-worker
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER_URL=spark://wireguard:7077
  #     - SPARK_WORKER_MEMORY=2G
  #     - SPARK_WORKER_CORES=2
  #   depends_on:
  #     - spark-master
  #   networks:
  #     - cloudless-net

  livy:
    image: livy:latest
    build:
      context: ./provider/spark/livy
      dockerfile: livy.Dockerfile
    container_name: livy
    environment:
      - SPARK_HOME=/opt/bitnami/spark
      - LIVY_SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - cloudless-net
    volumes:
      - shared-data:/app/scripts

  wireguard:
    build:
      context: ./wireguard
      dockerfile: Dockerfile
    container_name: wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    privileged: true
    sysctls:
      - net.ipv4.ip_forward=1
    ports:
      - "${WG_PORT:-51820}:${WG_PORT:-51820}/udp"
      - "5000:5000"
      - "7077:7077"
      - "7078:7078"
      - "7079:7079"
      - "8080:8080"
      - "6066:6066"
    volumes:
      - ./config:/etc/wireguard:rw
      - ./peers:/etc/wireguard/peers:ro
    environment:
      WG_INTERFACE: ${WG_INTERFACE:-wg0}
      WG_PORT: ${WG_PORT:-51820}
      WG_SERVER_IP: ${WG_SERVER_IP:-10.10.0.1/24}
      WG_SUBNET: ${WG_SUBNET:-10.10.0.0/24}
      WG_ENABLE_NAT: ${WG_ENABLE_NAT:-true}
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /run
    networks:
      - cloudless-net

networks:
  cloudless-net:
    driver: bridge

volumes:
  postgres_data:
  shared-data:
